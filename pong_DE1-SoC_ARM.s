.equ VGA_BASE, 0xC8000000
.equ BUTTON_BASE, 0xFF200050
.equ YH1, 0x00001000
.equ YL1, 0x00001004
.equ YH2, 0x00001008
.equ YL2, 0x0000100C
.equ BALLPY, 0x00001010
.equ BALLPX, 0x00001014
.equ BALLD, 0x00001018

.global _start
_start:
	
RESET:	LDR R0, =VGA_BASE
	MOV R1, #0x0
	MOV R2, #0x0
	LDR R3, =0x0003FFFE
LOOP1:		STR R1, [R0, R2]
		ADD R2, R2, #0x4
		CMP R2, R3
		BLE LOOP1
		
	LDR R1, =0xFFFFFFFF
	LDR R2, =0x14000
LOOP21:		MOV R3, #0x0
LOOP22:		ADD R4, R2, R3
		STR R1, [R0, R4]
		ADD R3, R3, #0x4
		CMP R3, #0x14
		BLE LOOP22
		ADD R2, R2, #0x400
		LDR R4, =0x28000
		CMP R2, R4
		BLE LOOP21
		
	LDR R1, =0xFFFFFFFF
	LDR R2, =0x14000
LOOP31:		LDR R3, =0x27C
LOOP32:		ADD R4, R2, R3
		STR R1, [R0, R4]
		SUB R3, R3, #0x4
		LDR R5, =0x268
		CMP R3, R5
		BGE LOOP32
		ADD R2, R2, #0x400
		LDR R4, =0x28000
		CMP R2, R4
		BLE LOOP31
	
	LDR R1, =0xFFFFFFFF
	LDR R2, =0x1D000
LOOP41:		LDR R3, =0x138
LOOP42:		ADD R4, R2, R3
		STR R1, [R0, R4]
		ADD R3, R3, #0x4
		LDR R5, =0x148
		CMP R3, R5
		BLE LOOP42
		ADD R2, R2, #0x400
		LDR R4, =0x1F400
		CMP R2, R4
		BLE LOOP41
	LDR R4, =BALLPY
	LDR R2, =0x1D000
	STR R2, [R4]
	LDR R4, =BALLPX
	LDR R2, =0x138
	STR R2, [R4]
		
	LDR R1, =0x14000
	LDR R2, =YH1
	STR R1, [R2]
	LDR R1, =0x28400
	LDR R2, =YL1
	STR R1, [R2]
	LDR R1, =0x14000
	LDR R2, =YH2
	STR R1, [R2]
	LDR R1, =0x28400
	LDR R2, =YL2
	STR R1, [R2]
		
	LDR R1, =BUTTON_BASE
LOOP51:		MOV R2, #0x00
LOOP52:		ADD R2, R2, #0x1
		CMP R2, #0x4
		BGT LOOP51
		LDR R3, [R1]
		CMP R3, #0xF
		BNE LOOP52
	LDR R3, =BALLD
	STR R2, [R3]
	
	LDR R2, =0xFFFFF
WAIT1:		SUB R2, R2, #0x1
		CMP R2, #0x0
		BNE WAIT1
		
LOOP:		LDR R2, [R1]
		AND R3, R2, #0x1
		CMP R3, #0x1
		BNE S1
		
		LDR R2, =0xFFFFFFFF
		MOV R3, #0x0
		
		LDR R4, =YH1
		LDR R5, [R4]
		SUB R5, R5, #0x400
		CMP R5, #0x0
		BLT S1
		MOV R6, #0x27C
LOOP61:		ADD R7, R6, R5
		STR R2, [R0, R7]
		SUB R6, R6, #0x4
		LDR R7, =0x268
		CMP R6, R7
		BGE LOOP61
		STR R5, [R4]
		
		LDR R4, =YL1
		LDR R5, [R4]
		SUB R5, R5, #0x400
		MOV R6, #0x27C
LOOP62: 	ADD R7, R6, R5
		STR R3, [R0, R7]
		SUB R6, R6, #0x4
		LDR R7, =0x268
		CMP R6, R7
		BGE LOOP62
		STR R5, [R4]
		
S1:			LDR R2, [R1]
		AND R3, R2, #0x2
		CMP R3, #0x2
		BNE S2
		
		LDR R2, =0xFFFFFFFF
		MOV R3, #0x0
		
		LDR R4, =YL1
		LDR R5, [R4]
		LDR R6, =0x3BC00
		CMP R5, R6
		BGT S2
		MOV R6, #0x27C
LOOP63:		ADD R7, R6, R5
		STR R2, [R0, R7]
		SUB R6, R6, #0x4
		LDR R7, =0x268
		CMP R6, R7
		BGE LOOP63
		ADD R5, R5, #0x400
		STR R5, [R4]
		
		LDR R4, =YH1
		LDR R5, [R4]
		MOV R6, #0x27C
LOOP64: 	ADD R7, R6, R5
		STR R3, [R0, R7]
		SUB R6, R6, #0x4
		MOV R7, #0x268
		CMP R6, R7
		BGE LOOP64
		ADD R5, R5, #0x400
		STR R5, [R4]
		
S2:			LDR R2, [R1]
		AND R3, R2, #0x4
		CMP R3, #0x4
		BNE S3
		
		LDR R2, =0xFFFFFFFF
		MOV R3, #0x0
		
		LDR R4, =YH2
		LDR R5, [R4]
		SUB R5, R5, #0x400
		CMP R5, #0x0
		BLT S3
		MOV R6, #0x0
LOOP65:		ADD R7, R6, R5
		STR R2, [R0, R7]
		ADD R6, R6, #0x4
		CMP R6, #0x14
		BLE LOOP65
		STR R5, [R4]
		
		LDR R4, =YL2
		LDR R5, [R4]
		SUB R5, R5, #0x400
		MOV R6, #0x0
LOOP66: 	ADD R7, R6, R5
		STR R3, [R0, R7]
		ADD R6, R6, #0x4
		CMP R6, #0x14
		BLE LOOP66
		STR R5, [R4]
		
S3:			LDR R2, [R1]
		AND R3, R2, #0x8
		CMP R3, #0x8
		BNE S4
		
		LDR R2, =0xFFFFFFFF
		MOV R3, #0x0
		
		LDR R4, =YL2
		LDR R5, [R4]
		LDR R6, =0x3BC00
		CMP R5, R6
		BGT S4
		MOV R6, #0x0
LOOP67:		ADD R7, R6, R5
		STR R2, [R0, R7]
		ADD R6, R6, #0x4
		CMP R6, #0x14
		BLE LOOP67
		ADD R5, R5, #0x400
		STR R5, [R4]
		
		LDR R4, =YH2
		LDR R5, [R4]
		MOV R6, #0x0
LOOP68: 	ADD R7, R6, R5
		STR R3, [R0, R7]
		ADD R6, R6, #0x4
		CMP R6, #0x14
		BLE LOOP68
		ADD R5, R5, #0x400
		STR R5, [R4]
		
S4:			LDR R3, =BALLD
		LDR R2, [R3]
		CMP R2, #0x1
		BEQ MOV1
		CMP R2, #0x2
		BEQ MOV2
		CMP R2, #0x3
		BEQ MOV3
		CMP R2, #0x4
		BEQ MOV4
			
MOV1:		LDR R3, =BALLPY
		LDR R2, [R3]
		LDR R4, =BALLPX
		LDR R3, [R4]
		SUB R4, R2, #0x400
		CMP R4, #0x0
		BLT MOV2
		ADD R4, R3, #0x14
		CMP R4, #0x27C
		BGT RESET

		SUB R4, R2, #0x400
		ADD R4, R4, R3
		ADD R4, R4, #0x14
		LDR R5, =0xFFFF
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP71:		LDRH R7, [R0, R4]
		CMP R7, R5
		BEQ MOV4
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP71
		
		ADD R4, R2, R3
		LDR R5, =0x0
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP72: 	STRH R5, [R0, R4]
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP72

		SUB R4, R2, #0x400
		ADD R4, R4, R3
		ADD R4, R4, #0x14
		LDR R5, =0xFFFF
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP73:		STRH R5, [R0, R4]
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP73
		
		LDR R4, =0x2400
		ADD R4, R4, R2
		ADD R4, R4, R3
		LDR R5, =0x0
		LDR R6, =0x12
		ADD R6, R4, R6
LOOP74:		STRH R5, [R0, R4]
		ADD R4, R4, #0x2
		CMP R4, R6
		BLE LOOP74
		
		SUB R4, R2, #0x400
		ADD R4, R4, R3
		ADD R4, R4, #0x2
		LDR R5, =0xFFFF
		LDR R6, =0x12
		ADD R6, R4, R6
LOOP75:		STRH R5, [R0, R4]
		ADD R4, R4, #0x2
		CMP R4, R6
		BLE LOOP75
		
		LDR R4, =BALLPY
		SUB R2, R2, #0x400
		STR R2, [R4]
		LDR R4, =BALLPX
		ADD R3, R3, #0x2
		STR R3, [R4]
		LDR R3, =BALLD
		MOV R2, #0x1
		STR R2, [R3]
		
		B END
		
		
		
MOV2:		LDR R3, =BALLPY
		LDR R2, [R3]
		LDR R4, =BALLPX
		LDR R3, [R4]
		LDR R4, =0x2800
		ADD R4, R4, R2
		CMP R4, #0x3BC00
		BGT MOV1
		ADD R4, R3, #0x14
		CMP R4, #0x27C
		BGT RESET

		ADD R4, R2, #0x400
		ADD R4, R4, R3
		ADD R4, R4, #0x14
		LDR R5, =0xFFFF
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP81:		LDRH R7, [R0, R4]
		CMP R7, R5
		BEQ MOV3
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP81
		
		ADD R4, R2, R3
		LDR R5, =0x0
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP82: 	STRH R5, [R0, R4]
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP82

		ADD R4, R2, #0x400
		ADD R4, R4, R3
		ADD R4, R4, #0x14
		LDR R5, =0xFFFF
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP83:		STRH R5, [R0, R4]
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP83
		
		ADD R4, R2, R3
		LDR R5, =0x0
		LDR R6, =0x12
		ADD R6, R4, R6
LOOP84:		STRH R5, [R0, R4]
		ADD R4, R4, #0x2
		CMP R4, R6
		BLE LOOP84
		
		LDR R4, =0x2800
		ADD R4, R4, R2
		ADD R4, R4, R3
		ADD R4, R4, #0x2
		LDR R5, =0xFFFF
		LDR R6, =0x12
		ADD R6, R4, R6
LOOP85:		STRH R5, [R0, R4]
		ADD R4, R4, #0x2
		CMP R4, R6
		BLE LOOP85
		
		LDR R4, =BALLPY
		ADD R2, R2, #0x400
		STR R2, [R4]
		LDR R4, =BALLPX
		ADD R3, R3, #0x2
		STR R3, [R4]
		LDR R3, =BALLD
		MOV R2, #0x2
		STR R2, [R3]
		
		B END

MOV3:		LDR R3, =BALLPY
		LDR R2, [R3]
		LDR R4, =BALLPX
		LDR R3, [R4]
		LDR R4, =0x2800
		ADD R4, R4, R2
		CMP R4, #0x3BC00
		BGT MOV4
		SUB R4, R3, #0x2
		CMP R4, #0x0
		BLT RESET

		ADD R4, R2, #0x400
		ADD R4, R4, R3
		SUB R4, R4, #0x2
		LDR R5, =0xFFFF
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP91:		LDRH R7, [R0, R4]
		CMP R7, R5
		BEQ MOV2
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP91
		
		ADD R4, R2, R3
		ADD R4, R4, #0x12
		LDR R5, =0x0
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP92: 	STRH R5, [R0, R4]
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP92

		ADD R4, R2, #0x400
		ADD R4, R4, R3
		SUB R4, R4, #0x2
		LDR R5, =0xFFFF
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP93:		STRH R5, [R0, R4]
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP93
		
		ADD R4, R2, R3
		LDR R5, =0x0
		LDR R6, =0x12
		ADD R6, R4, R6
LOOP94:		STRH R5, [R0, R4]
		ADD R4, R4, #0x2
		CMP R4, R6
		BLE LOOP94
		
		LDR R4, =0x2800
		ADD R4, R4, R2
		ADD R4, R4, R3
		SUB R4, R4, #0x2
		LDR R5, =0xFFFF
		LDR R6, =0x12
		ADD R6, R4, R6
LOOP95:		STRH R5, [R0, R4]
		ADD R4, R4, #0x2
		CMP R4, R6
		BLE LOOP95
		
		LDR R4, =BALLPY
		ADD R2, R2, #0x400
		STR R2, [R4]
		LDR R4, =BALLPX
		SUB R3, R3, #0x2
		STR R3, [R4]
		LDR R3, =BALLD
		MOV R2, #0x3
		STR R2, [R3]
		
		B END

MOV4:		LDR R3, =BALLPY
		LDR R2, [R3]
		LDR R4, =BALLPX
		LDR R3, [R4]
		SUB R4, R2, #0x400
		CMP R4, #0x0
		BLT MOV3
		SUB R4, R3, #0x2
		CMP R4, #0x0
		BLT RESET

		SUB R4, R2, #0x400
		ADD R4, R4, R3
		SUB R4, R4, #0x2
		LDR R5, =0xFFFF
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP101:		LDRH R7, [R0, R4]
		CMP R7, R5
		BEQ MOV1
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP101
		
		ADD R4, R2, R3
		ADD R4, R4, #0x12
		LDR R5, =0x0
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP102: 	STRH R5, [R0, R4]
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP102

		SUB R4, R2, #0x400
		ADD R4, R4, R3
		SUB R4, R4, #0x2
		LDR R5, =0xFFFF
		LDR R6, =0x2400
		ADD R6, R4, R6
LOOP103:		STRH R5, [R0, R4]
		ADD R4, R4, #0x400
		CMP R4, R6
		BLE LOOP103
		
		LDR R4, =0x2400
		ADD R4, R4, R2
		ADD R4, R4, R3
		LDR R5, =0x0
		LDR R6, =0x12
		ADD R6, R4, R6
LOOP104:		STRH R5, [R0, R4]
		ADD R4, R4, #0x2
		CMP R4, R6
		BLE LOOP104
		
		ADD R4, R2, R3
		SUB R4, R4, #0x400
		SUB R4, R4, #0x2
		LDR R5, =0xFFFF
		LDR R6, =0x12
		ADD R6, R4, R6
LOOP105:		STRH R5, [R0, R4]
		ADD R4, R4, #0x2
		CMP R4, R6
		BLE LOOP105
		
		LDR R4, =BALLPY
		SUB R2, R2, #0x400
		STR R2, [R4]
		LDR R4, =BALLPX
		SUB R3, R3, #0x2
		STR R3, [R4]
		LDR R3, =BALLD
		MOV R2, #0x4
		STR R2, [R3]

END:		LDR R2, =0x19BDFF
WAIT2:		SUB R2, R2, #0x1
		CMP R2, #0x0
		BNE WAIT2
		
		B LOOP

.end	